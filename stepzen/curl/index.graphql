type Hourly {
    apparent_temperature: [Float]
    cloudcover: [Int]
    cloudcover_high: [Int]
    cloudcover_low: [Int]
    cloudcover_mid: [Int]
    rain: [Float]
    showers: [Float]
    snow_depth: [Int]
    snowfall: [Int]
    temperature_2m: [Float]
    time: [DateTime]
}
type HourlyUnits {
    apparent_temperature: String
    cloudcover: String
    cloudcover_high: String
    cloudcover_low: String
    cloudcover_mid: String
    rain: String
    showers: String
    snow_depth: String
    snowfall: String
    temperature_2m: String
    time: String
}
type Root {
    elevation: Int
    generationtime_ms: Float
    hourly: Hourly
    hourly_units: HourlyUnits
    latitude: Float
    longitude: Float
    timezone: String
    timezone_abbreviation: String
    utc_offset_seconds: Int
}

type Query {
    myQuery(hourly: String, latitude: String, longitude: String): Root
    @rest(endpoint: "https://api.open-meteo.com/v1/forecast")
}
